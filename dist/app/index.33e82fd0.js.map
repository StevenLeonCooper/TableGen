{"mappings":"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","sources":["./node_modules/@parcel/runtime-js/lib/cacheLoader.js","./node_modules/@parcel/scope-hoisting/lib/helpers.js","./node_modules/@parcel/runtime-js/lib/loaders/browser/import-polyfill.js","./node_modules/@parcel/runtime-js/lib/bundle-url.js","./scripts/libs/mustache.js","./scripts/helper_ui.js","./scripts/helper_events.js","./scripts/class_Benchmark.js","./scripts/app.js","./scripts/class_SimpleTable.js","./node_modules/@parcel/runtime-js/lib/JSRuntime.js"],"sourcesContent":["\"use strict\";\n\nlet cachedBundles = {};\nlet cachedPreloads = {};\nlet cachedPrefetches = {};\n\nfunction getCache(type) {\n  switch (type) {\n    case 'preload':\n      return cachedPreloads;\n\n    case 'prefetch':\n      return cachedPrefetches;\n\n    default:\n      return cachedBundles;\n  }\n}\n\nmodule.exports = function (loader, type) {\n  return function (bundle) {\n    let cache = getCache(type);\n\n    if (cache[bundle]) {\n      return cache[bundle];\n    }\n\n    return cache[bundle] = loader.apply(null, arguments).catch(function (e) {\n      delete cache[bundle];\n      throw e;\n    });\n  };\n};","var $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$export(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n","const cacheLoader = require('../../cacheLoader');\n\nmodule.exports = cacheLoader(function importModule(bundle) {\n  return new Promise((resolve, reject) => {\n    // Add a global function to handle when the script loads.\n    let globalName = `i${('' + Math.random()).slice(2)}`;\n    global[globalName] = m => {\n      resolve(m);\n      cleanup();\n    };\n\n    // Remove script on load or error\n    let cleanup = () => {\n      delete global[globalName];\n      script.onerror = null;\n      script.remove();\n    };\n\n    // Append an inline script tag into the document head\n    let script = document.createElement('script');\n    script.async = true;\n    script.type = 'module';\n    script.charset = 'utf-8';\n    script.textContent = `import * as m from '${bundle}'; ${globalName}(m);`;\n    script.onerror = function(e) {\n      reject(e);\n      cleanup();\n    };\n\n    document.head.appendChild(script);\n  });\n});\n","\"use strict\";\n\n/* globals document:readonly */\nvar bundleURL = null;\n\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  let matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","/*!\r\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\r\n * http://github.com/janl/mustache.js\r\n */\r\n\r\nvar objectToString = Object.prototype.toString;\r\nvar isArray = Array.isArray || function isArrayPolyfill (object) {\r\n  return objectToString.call(object) === '[object Array]';\r\n};\r\n\r\nfunction isFunction (object) {\r\n  return typeof object === 'function';\r\n}\r\n\r\n/**\r\n * More correct typeof string handling array\r\n * which normally returns typeof 'object'\r\n */\r\nfunction typeStr (obj) {\r\n  return isArray(obj) ? 'array' : typeof obj;\r\n}\r\n\r\nfunction escapeRegExp (string) {\r\n  return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\r\n}\r\n\r\n/**\r\n * Null safe way of checking whether or not an object,\r\n * including its prototype, has a given property\r\n */\r\nfunction hasProperty (obj, propName) {\r\n  return obj != null && typeof obj === 'object' && (propName in obj);\r\n}\r\n\r\n/**\r\n * Safe way of detecting whether or not the given thing is a primitive and\r\n * whether it has the given property\r\n */\r\nfunction primitiveHasOwnProperty (primitive, propName) {\r\n  return (\r\n    primitive != null\r\n    && typeof primitive !== 'object'\r\n    && primitive.hasOwnProperty\r\n    && primitive.hasOwnProperty(propName)\r\n  );\r\n}\r\n\r\n// Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\r\n// See https://github.com/janl/mustache.js/issues/189\r\nvar regExpTest = RegExp.prototype.test;\r\nfunction testRegExp (re, string) {\r\n  return regExpTest.call(re, string);\r\n}\r\n\r\nvar nonSpaceRe = /\\S/;\r\nfunction isWhitespace (string) {\r\n  return !testRegExp(nonSpaceRe, string);\r\n}\r\n\r\nvar entityMap = {\r\n  '&': '&amp;',\r\n  '<': '&lt;',\r\n  '>': '&gt;',\r\n  '\"': '&quot;',\r\n  \"'\": '&#39;',\r\n  '/': '&#x2F;',\r\n  '`': '&#x60;',\r\n  '=': '&#x3D;'\r\n};\r\n\r\nfunction escapeHtml (string) {\r\n  return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\r\n    return entityMap[s];\r\n  });\r\n}\r\n\r\nvar whiteRe = /\\s*/;\r\nvar spaceRe = /\\s+/;\r\nvar equalsRe = /\\s*=/;\r\nvar curlyRe = /\\s*\\}/;\r\nvar tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\r\n\r\n/**\r\n * Breaks up the given `template` string into a tree of tokens. If the `tags`\r\n * argument is given here it must be an array with two string values: the\r\n * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\r\n * course, the default is to use mustaches (i.e. mustache.tags).\r\n *\r\n * A token is an array with at least 4 elements. The first element is the\r\n * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\r\n * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\r\n * all text that appears outside a symbol this element is \"text\".\r\n *\r\n * The second element of a token is its \"value\". For mustache tags this is\r\n * whatever else was inside the tag besides the opening symbol. For text tokens\r\n * this is the text itself.\r\n *\r\n * The third and fourth elements of the token are the start and end indices,\r\n * respectively, of the token in the original template.\r\n *\r\n * Tokens that are the root node of a subtree contain two more elements: 1) an\r\n * array of tokens in the subtree and 2) the index in the original template at\r\n * which the closing tag for that section begins.\r\n *\r\n * Tokens for partials also contain two more elements: 1) a string value of\r\n * indendation prior to that tag and 2) the index of that tag on that line -\r\n * eg a value of 2 indicates the partial is the third tag on this line.\r\n */\r\nfunction parseTemplate (template, tags) {\r\n  if (!template)\r\n    return [];\r\n  var lineHasNonSpace = false;\r\n  var sections = [];     // Stack to hold section tokens\r\n  var tokens = [];       // Buffer to hold the tokens\r\n  var spaces = [];       // Indices of whitespace tokens on the current line\r\n  var hasTag = false;    // Is there a {{tag}} on the current line?\r\n  var nonSpace = false;  // Is there a non-space char on the current line?\r\n  var indentation = '';  // Tracks indentation for tags that use it\r\n  var tagIndex = 0;      // Stores a count of number of tags encountered on a line\r\n\r\n  // Strips all whitespace tokens array for the current line\r\n  // if there was a {{#tag}} on it and otherwise only space.\r\n  function stripSpace () {\r\n    if (hasTag && !nonSpace) {\r\n      while (spaces.length)\r\n        delete tokens[spaces.pop()];\r\n    } else {\r\n      spaces = [];\r\n    }\r\n\r\n    hasTag = false;\r\n    nonSpace = false;\r\n  }\r\n\r\n  var openingTagRe, closingTagRe, closingCurlyRe;\r\n  function compileTags (tagsToCompile) {\r\n    if (typeof tagsToCompile === 'string')\r\n      tagsToCompile = tagsToCompile.split(spaceRe, 2);\r\n\r\n    if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\r\n      throw new Error('Invalid tags: ' + tagsToCompile);\r\n\r\n    openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\r\n    closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\r\n    closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\r\n  }\r\n\r\n  compileTags(tags || mustache.tags);\r\n\r\n  var scanner = new Scanner(template);\r\n\r\n  var start, type, value, chr, token, openSection;\r\n  while (!scanner.eos()) {\r\n    start = scanner.pos;\r\n\r\n    // Match any text between tags.\r\n    value = scanner.scanUntil(openingTagRe);\r\n\r\n    if (value) {\r\n      for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\r\n        chr = value.charAt(i);\r\n\r\n        if (isWhitespace(chr)) {\r\n          spaces.push(tokens.length);\r\n          indentation += chr;\r\n        } else {\r\n          nonSpace = true;\r\n          lineHasNonSpace = true;\r\n          indentation += ' ';\r\n        }\r\n\r\n        tokens.push([ 'text', chr, start, start + 1 ]);\r\n        start += 1;\r\n\r\n        // Check for whitespace on the current line.\r\n        if (chr === '\\n') {\r\n          stripSpace();\r\n          indentation = '';\r\n          tagIndex = 0;\r\n          lineHasNonSpace = false;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Match the opening tag.\r\n    if (!scanner.scan(openingTagRe))\r\n      break;\r\n\r\n    hasTag = true;\r\n\r\n    // Get the tag type.\r\n    type = scanner.scan(tagRe) || 'name';\r\n    scanner.scan(whiteRe);\r\n\r\n    // Get the tag value.\r\n    if (type === '=') {\r\n      value = scanner.scanUntil(equalsRe);\r\n      scanner.scan(equalsRe);\r\n      scanner.scanUntil(closingTagRe);\r\n    } else if (type === '{') {\r\n      value = scanner.scanUntil(closingCurlyRe);\r\n      scanner.scan(curlyRe);\r\n      scanner.scanUntil(closingTagRe);\r\n      type = '&';\r\n    } else {\r\n      value = scanner.scanUntil(closingTagRe);\r\n    }\r\n\r\n    // Match the closing tag.\r\n    if (!scanner.scan(closingTagRe))\r\n      throw new Error('Unclosed tag at ' + scanner.pos);\r\n\r\n    if (type == '>') {\r\n      token = [ type, value, start, scanner.pos, indentation, tagIndex, lineHasNonSpace ];\r\n    } else {\r\n      token = [ type, value, start, scanner.pos ];\r\n    }\r\n    tagIndex++;\r\n    tokens.push(token);\r\n\r\n    if (type === '#' || type === '^') {\r\n      sections.push(token);\r\n    } else if (type === '/') {\r\n      // Check section nesting.\r\n      openSection = sections.pop();\r\n\r\n      if (!openSection)\r\n        throw new Error('Unopened section \"' + value + '\" at ' + start);\r\n\r\n      if (openSection[1] !== value)\r\n        throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\r\n    } else if (type === 'name' || type === '{' || type === '&') {\r\n      nonSpace = true;\r\n    } else if (type === '=') {\r\n      // Set the tags for the next time around.\r\n      compileTags(value);\r\n    }\r\n  }\r\n\r\n  stripSpace();\r\n\r\n  // Make sure there are no open sections when we're done.\r\n  openSection = sections.pop();\r\n\r\n  if (openSection)\r\n    throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\r\n\r\n  return nestTokens(squashTokens(tokens));\r\n}\r\n\r\n/**\r\n * Combines the values of consecutive text tokens in the given `tokens` array\r\n * to a single token.\r\n */\r\nfunction squashTokens (tokens) {\r\n  var squashedTokens = [];\r\n\r\n  var token, lastToken;\r\n  for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\r\n    token = tokens[i];\r\n\r\n    if (token) {\r\n      if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\r\n        lastToken[1] += token[1];\r\n        lastToken[3] = token[3];\r\n      } else {\r\n        squashedTokens.push(token);\r\n        lastToken = token;\r\n      }\r\n    }\r\n  }\r\n\r\n  return squashedTokens;\r\n}\r\n\r\n/**\r\n * Forms the given array of `tokens` into a nested tree structure where\r\n * tokens that represent a section have two additional items: 1) an array of\r\n * all tokens that appear in that section and 2) the index in the original\r\n * template that represents the end of that section.\r\n */\r\nfunction nestTokens (tokens) {\r\n  var nestedTokens = [];\r\n  var collector = nestedTokens;\r\n  var sections = [];\r\n\r\n  var token, section;\r\n  for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\r\n    token = tokens[i];\r\n\r\n    switch (token[0]) {\r\n      case '#':\r\n      case '^':\r\n        collector.push(token);\r\n        sections.push(token);\r\n        collector = token[4] = [];\r\n        break;\r\n      case '/':\r\n        section = sections.pop();\r\n        section[5] = token[2];\r\n        collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\r\n        break;\r\n      default:\r\n        collector.push(token);\r\n    }\r\n  }\r\n\r\n  return nestedTokens;\r\n}\r\n\r\n/**\r\n * A simple string scanner that is used by the template parser to find\r\n * tokens in template strings.\r\n */\r\nfunction Scanner (string) {\r\n  this.string = string;\r\n  this.tail = string;\r\n  this.pos = 0;\r\n}\r\n\r\n/**\r\n * Returns `true` if the tail is empty (end of string).\r\n */\r\nScanner.prototype.eos = function eos () {\r\n  return this.tail === '';\r\n};\r\n\r\n/**\r\n * Tries to match the given regular expression at the current position.\r\n * Returns the matched text if it can match, the empty string otherwise.\r\n */\r\nScanner.prototype.scan = function scan (re) {\r\n  var match = this.tail.match(re);\r\n\r\n  if (!match || match.index !== 0)\r\n    return '';\r\n\r\n  var string = match[0];\r\n\r\n  this.tail = this.tail.substring(string.length);\r\n  this.pos += string.length;\r\n\r\n  return string;\r\n};\r\n\r\n/**\r\n * Skips all text until the given regular expression can be matched. Returns\r\n * the skipped string, which is the entire tail if no match can be made.\r\n */\r\nScanner.prototype.scanUntil = function scanUntil (re) {\r\n  var index = this.tail.search(re), match;\r\n\r\n  switch (index) {\r\n    case -1:\r\n      match = this.tail;\r\n      this.tail = '';\r\n      break;\r\n    case 0:\r\n      match = '';\r\n      break;\r\n    default:\r\n      match = this.tail.substring(0, index);\r\n      this.tail = this.tail.substring(index);\r\n  }\r\n\r\n  this.pos += match.length;\r\n\r\n  return match;\r\n};\r\n\r\n/**\r\n * Represents a rendering context by wrapping a view object and\r\n * maintaining a reference to the parent context.\r\n */\r\nfunction Context (view, parentContext) {\r\n  this.view = view;\r\n  this.cache = { '.': this.view };\r\n  this.parent = parentContext;\r\n}\r\n\r\n/**\r\n * Creates a new context using the given view with this context\r\n * as the parent.\r\n */\r\nContext.prototype.push = function push (view) {\r\n  return new Context(view, this);\r\n};\r\n\r\n/**\r\n * Returns the value of the given name in this context, traversing\r\n * up the context hierarchy if the value is absent in this context's view.\r\n */\r\nContext.prototype.lookup = function lookup (name) {\r\n  var cache = this.cache;\r\n\r\n  var value;\r\n  if (cache.hasOwnProperty(name)) {\r\n    value = cache[name];\r\n  } else {\r\n    var context = this, intermediateValue, names, index, lookupHit = false;\r\n\r\n    while (context) {\r\n      if (name.indexOf('.') > 0) {\r\n        intermediateValue = context.view;\r\n        names = name.split('.');\r\n        index = 0;\r\n\r\n        /**\r\n         * Using the dot notion path in `name`, we descend through the\r\n         * nested objects.\r\n         *\r\n         * To be certain that the lookup has been successful, we have to\r\n         * check if the last object in the path actually has the property\r\n         * we are looking for. We store the result in `lookupHit`.\r\n         *\r\n         * This is specially necessary for when the value has been set to\r\n         * `undefined` and we want to avoid looking up parent contexts.\r\n         *\r\n         * In the case where dot notation is used, we consider the lookup\r\n         * to be successful even if the last \"object\" in the path is\r\n         * not actually an object but a primitive (e.g., a string, or an\r\n         * integer), because it is sometimes useful to access a property\r\n         * of an autoboxed primitive, such as the length of a string.\r\n         **/\r\n        while (intermediateValue != null && index < names.length) {\r\n          if (index === names.length - 1)\r\n            lookupHit = (\r\n              hasProperty(intermediateValue, names[index])\r\n              || primitiveHasOwnProperty(intermediateValue, names[index])\r\n            );\r\n\r\n          intermediateValue = intermediateValue[names[index++]];\r\n        }\r\n      } else {\r\n        intermediateValue = context.view[name];\r\n\r\n        /**\r\n         * Only checking against `hasProperty`, which always returns `false` if\r\n         * `context.view` is not an object. Deliberately omitting the check\r\n         * against `primitiveHasOwnProperty` if dot notation is not used.\r\n         *\r\n         * Consider this example:\r\n         * ```\r\n         * Mustache.render(\"The length of a football field is {{#length}}{{length}}{{/length}}.\", {length: \"100 yards\"})\r\n         * ```\r\n         *\r\n         * If we were to check also against `primitiveHasOwnProperty`, as we do\r\n         * in the dot notation case, then render call would return:\r\n         *\r\n         * \"The length of a football field is 9.\"\r\n         *\r\n         * rather than the expected:\r\n         *\r\n         * \"The length of a football field is 100 yards.\"\r\n         **/\r\n        lookupHit = hasProperty(context.view, name);\r\n      }\r\n\r\n      if (lookupHit) {\r\n        value = intermediateValue;\r\n        break;\r\n      }\r\n\r\n      context = context.parent;\r\n    }\r\n\r\n    cache[name] = value;\r\n  }\r\n\r\n  if (isFunction(value))\r\n    value = value.call(this.view);\r\n\r\n  return value;\r\n};\r\n\r\n/**\r\n * A Writer knows how to take a stream of tokens and render them to a\r\n * string, given a context. It also maintains a cache of templates to\r\n * avoid the need to parse the same template twice.\r\n */\r\nfunction Writer () {\r\n  this.templateCache = {\r\n    _cache: {},\r\n    set: function set (key, value) {\r\n      this._cache[key] = value;\r\n    },\r\n    get: function get (key) {\r\n      return this._cache[key];\r\n    },\r\n    clear: function clear () {\r\n      this._cache = {};\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Clears all cached templates in this writer.\r\n */\r\nWriter.prototype.clearCache = function clearCache () {\r\n  if (typeof this.templateCache !== 'undefined') {\r\n    this.templateCache.clear();\r\n  }\r\n};\r\n\r\n/**\r\n * Parses and caches the given `template` according to the given `tags` or\r\n * `mustache.tags` if `tags` is omitted,  and returns the array of tokens\r\n * that is generated from the parse.\r\n */\r\nWriter.prototype.parse = function parse (template, tags) {\r\n  var cache = this.templateCache;\r\n  var cacheKey = template + ':' + (tags || mustache.tags).join(':');\r\n  var isCacheEnabled = typeof cache !== 'undefined';\r\n  var tokens = isCacheEnabled ? cache.get(cacheKey) : undefined;\r\n\r\n  if (tokens == undefined) {\r\n    tokens = parseTemplate(template, tags);\r\n    isCacheEnabled && cache.set(cacheKey, tokens);\r\n  }\r\n  return tokens;\r\n};\r\n\r\n/**\r\n * High-level method that is used to render the given `template` with\r\n * the given `view`.\r\n *\r\n * The optional `partials` argument may be an object that contains the\r\n * names and templates of partials that are used in the template. It may\r\n * also be a function that is used to load partial templates on the fly\r\n * that takes a single argument: the name of the partial.\r\n *\r\n * If the optional `config` argument is given here, then it should be an\r\n * object with a `tags` attribute or an `escape` attribute or both.\r\n * If an array is passed, then it will be interpreted the same way as\r\n * a `tags` attribute on a `config` object.\r\n *\r\n * The `tags` attribute of a `config` object must be an array with two\r\n * string values: the opening and closing tags used in the template (e.g.\r\n * [ \"<%\", \"%>\" ]). The default is to mustache.tags.\r\n *\r\n * The `escape` attribute of a `config` object must be a function which\r\n * accepts a string as input and outputs a safely escaped string.\r\n * If an `escape` function is not provided, then an HTML-safe string\r\n * escaping function is used as the default.\r\n */\r\nWriter.prototype.render = function render (template, view, partials, config) {\r\n  var tags = this.getConfigTags(config);\r\n  var tokens = this.parse(template, tags);\r\n  var context = (view instanceof Context) ? view : new Context(view, undefined);\r\n  return this.renderTokens(tokens, context, partials, template, config);\r\n};\r\n\r\n/**\r\n * Low-level method that renders the given array of `tokens` using\r\n * the given `context` and `partials`.\r\n *\r\n * Note: The `originalTemplate` is only ever used to extract the portion\r\n * of the original template that was contained in a higher-order section.\r\n * If the template doesn't use higher-order sections, this argument may\r\n * be omitted.\r\n */\r\nWriter.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate, config) {\r\n  var buffer = '';\r\n\r\n  var token, symbol, value;\r\n  for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\r\n    value = undefined;\r\n    token = tokens[i];\r\n    symbol = token[0];\r\n\r\n    if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate, config);\r\n    else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate, config);\r\n    else if (symbol === '>') value = this.renderPartial(token, context, partials, config);\r\n    else if (symbol === '&') value = this.unescapedValue(token, context);\r\n    else if (symbol === 'name') value = this.escapedValue(token, context, config);\r\n    else if (symbol === 'text') value = this.rawValue(token);\r\n\r\n    if (value !== undefined)\r\n      buffer += value;\r\n  }\r\n\r\n  return buffer;\r\n};\r\n\r\nWriter.prototype.renderSection = function renderSection (token, context, partials, originalTemplate, config) {\r\n  var self = this;\r\n  var buffer = '';\r\n  var value = context.lookup(token[1]);\r\n\r\n  // This function is used to render an arbitrary template\r\n  // in the current context by higher-order sections.\r\n  function subRender (template) {\r\n    return self.render(template, context, partials, config);\r\n  }\r\n\r\n  if (!value) return;\r\n\r\n  if (isArray(value)) {\r\n    for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\r\n      buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate, config);\r\n    }\r\n  } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\r\n    buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate, config);\r\n  } else if (isFunction(value)) {\r\n    if (typeof originalTemplate !== 'string')\r\n      throw new Error('Cannot use higher-order sections without the original template');\r\n\r\n    // Extract the portion of the original template that the section contains.\r\n    value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\r\n\r\n    if (value != null)\r\n      buffer += value;\r\n  } else {\r\n    buffer += this.renderTokens(token[4], context, partials, originalTemplate, config);\r\n  }\r\n  return buffer;\r\n};\r\n\r\nWriter.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate, config) {\r\n  var value = context.lookup(token[1]);\r\n\r\n  // Use JavaScript's definition of falsy. Include empty arrays.\r\n  // See https://github.com/janl/mustache.js/issues/186\r\n  if (!value || (isArray(value) && value.length === 0))\r\n    return this.renderTokens(token[4], context, partials, originalTemplate, config);\r\n};\r\n\r\nWriter.prototype.indentPartial = function indentPartial (partial, indentation, lineHasNonSpace) {\r\n  var filteredIndentation = indentation.replace(/[^ \\t]/g, '');\r\n  var partialByNl = partial.split('\\n');\r\n  for (var i = 0; i < partialByNl.length; i++) {\r\n    if (partialByNl[i].length && (i > 0 || !lineHasNonSpace)) {\r\n      partialByNl[i] = filteredIndentation + partialByNl[i];\r\n    }\r\n  }\r\n  return partialByNl.join('\\n');\r\n};\r\n\r\nWriter.prototype.renderPartial = function renderPartial (token, context, partials, config) {\r\n  if (!partials) return;\r\n  var tags = this.getConfigTags(config);\r\n\r\n  var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\r\n  if (value != null) {\r\n    var lineHasNonSpace = token[6];\r\n    var tagIndex = token[5];\r\n    var indentation = token[4];\r\n    var indentedValue = value;\r\n    if (tagIndex == 0 && indentation) {\r\n      indentedValue = this.indentPartial(value, indentation, lineHasNonSpace);\r\n    }\r\n    var tokens = this.parse(indentedValue, tags);\r\n    return this.renderTokens(tokens, context, partials, indentedValue, config);\r\n  }\r\n};\r\n\r\nWriter.prototype.unescapedValue = function unescapedValue (token, context) {\r\n  var value = context.lookup(token[1]);\r\n  if (value != null)\r\n    return value;\r\n};\r\n\r\nWriter.prototype.escapedValue = function escapedValue (token, context, config) {\r\n  var escape = this.getConfigEscape(config) || mustache.escape;\r\n  var value = context.lookup(token[1]);\r\n  if (value != null)\r\n    return (typeof value === 'number' && escape === mustache.escape) ? String(value) : escape(value);\r\n};\r\n\r\nWriter.prototype.rawValue = function rawValue (token) {\r\n  return token[1];\r\n};\r\n\r\nWriter.prototype.getConfigTags = function getConfigTags (config) {\r\n  if (isArray(config)) {\r\n    return config;\r\n  }\r\n  else if (config && typeof config === 'object') {\r\n    return config.tags;\r\n  }\r\n  else {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nWriter.prototype.getConfigEscape = function getConfigEscape (config) {\r\n  if (config && typeof config === 'object' && !isArray(config)) {\r\n    return config.escape;\r\n  }\r\n  else {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nvar mustache = {\r\n  name: 'mustache.js',\r\n  version: '4.2.0',\r\n  tags: [ '{{', '}}' ],\r\n  clearCache: undefined,\r\n  escape: undefined,\r\n  parse: undefined,\r\n  render: undefined,\r\n  Scanner: undefined,\r\n  Context: undefined,\r\n  Writer: undefined,\r\n  /**\r\n   * Allows a user to override the default caching strategy, by providing an\r\n   * object with set, get and clear methods. This can also be used to disable\r\n   * the cache by setting it to the literal `undefined`.\r\n   */\r\n  set templateCache (cache) {\r\n    defaultWriter.templateCache = cache;\r\n  },\r\n  /**\r\n   * Gets the default or overridden caching object from the default writer.\r\n   */\r\n  get templateCache () {\r\n    return defaultWriter.templateCache;\r\n  }\r\n};\r\n\r\n// All high-level mustache.* functions use this writer.\r\nvar defaultWriter = new Writer();\r\n\r\n/**\r\n * Clears all cached templates in the default writer.\r\n */\r\nmustache.clearCache = function clearCache () {\r\n  return defaultWriter.clearCache();\r\n};\r\n\r\n/**\r\n * Parses and caches the given template in the default writer and returns the\r\n * array of tokens it contains. Doing this ahead of time avoids the need to\r\n * parse templates on the fly as they are rendered.\r\n */\r\nmustache.parse = function parse (template, tags) {\r\n  return defaultWriter.parse(template, tags);\r\n};\r\n\r\n/**\r\n * Renders the `template` with the given `view`, `partials`, and `config`\r\n * using the default writer.\r\n */\r\nmustache.render = function render (template, view, partials, config) {\r\n  if (typeof template !== 'string') {\r\n    throw new TypeError('Invalid template! Template should be a \"string\" ' +\r\n                        'but \"' + typeStr(template) + '\" was given as the first ' +\r\n                        'argument for mustache#render(template, view, partials)');\r\n  }\r\n\r\n  return defaultWriter.render(template, view, partials, config);\r\n};\r\n\r\n// Export the escaping function so that the user may override it.\r\n// See https://github.com/janl/mustache.js/issues/244\r\nmustache.escape = escapeHtml;\r\n\r\n// Export these mainly for testing, but also for advanced usage.\r\nmustache.Scanner = Scanner;\r\nmustache.Context = Context;\r\nmustache.Writer = Writer;\r\n\r\nexport default mustache;","import mustache from \"./libs/mustache.js\";\r\n\r\nimport { pageContext } from \"./app.js\";\r\n\r\nimport { events } from \"./helper_events.js\";\r\n\r\nexport const UI = {};\r\n\r\nUI.get = {\r\n    innerHTML: (source) => {\r\n        return source.innerHTML;\r\n    },\r\n    textContent: (source) => {\r\n        return source.textContent;\r\n    },\r\n    value: (source) => {\r\n        return source.value;\r\n    },\r\n    template: (source) => {\r\n\r\n        let selector = `[data-for='${source.id || source.name}']`;\r\n\r\n        let html = document.querySelector(selector).innerHTML;\r\n\r\n        let rendered = mustache.render(html, pageContext);\r\n\r\n        return rendered;\r\n    }\r\n}\r\n\r\nUI.set = {\r\n    innerHTML: (target, data) => {\r\n        target.innerHTML = data;\r\n        return `target HTML is now ${data}`;\r\n    },\r\n    textContent: (target, data) => {\r\n        target.textContent = data;\r\n        return `target text is now ${data}`;\r\n    },\r\n    value: (target, data) => {\r\n        target.value = data;\r\n        return `target value is now ${data}`;\r\n    }\r\n}\r\n\r\nUI.add = {\r\n    innerHTML: (target, data) => {\r\n        target.innerHTML = target.innerHTML + data;\r\n    },\r\n    textContent: (target, data) => {\r\n        target.textContent = target.textContent + data;\r\n    },\r\n    value: (target, data) => {\r\n        target.value = target.value + data;\r\n    }\r\n}\r\n\r\nconst closeModal = () => {\r\n    document.getElementById(\"ModalWrapper\")?.remove();\r\n};\r\n\r\nUI.modal = (content) => {\r\n\r\n    events.click.closeModal = events.click.closeModal || closeModal;\r\n\r\n    let template = `<div data-click=\"closeModal\" id=\"ModalContent\">${content}</div>`;\r\n\r\n    let wrapper = document.createElement(\"div\");\r\n\r\n    wrapper.id = \"ModalWrapper\";\r\n\r\n    wrapper.dataset.click = \"closeModal\";\r\n\r\n    wrapper.innerHTML = template;\r\n\r\n    document.body.appendChild(wrapper);\r\n};\r\n\r\nUI.alert = (message) => {\r\n    let template = `<h1>Alert</h1><hr><div id=\"Alert\">${message}<hr><button data-click=\"closeModal\">Okay</button></div>`;\r\n\r\n    UI.modal(template);\r\n\r\n};\r\n\r\nUI.warning = (message) => {\r\n\r\n    let template = `<h1>Warning</h1><hr><div id=\"Warning\">${message}<hr><button data-click=\"closeModal\">Okay</button></div>`;\r\n\r\n    UI.modal(template);\r\n\r\n    return false;\r\n};\r\n\r\nUI.confirm = (message, ifYes, ifNo) => {\r\n\r\n    let template = `<h1>Confirm</h1><hr>\r\n                    <div id=\"Confirm\">${message}<hr>\r\n                    <button data-click=\"confirmYes\">Yes</button>\r\n                    <button data-click=\"confirmNo\">No</button>\r\n                    </div>`;\r\n\r\n    events.click.confirmYes = () => {\r\n        closeModal();\r\n        ifYes?.();\r\n    };\r\n\r\n    events.click.confirmNo = () => {\r\n        closeModal();\r\n        ifNo?.();\r\n    };\r\n\r\n    UI.modal(template);\r\n\r\n};\r\n\r\nUI.textInput = (callback) => {\r\n\r\n    let template = `<h2>Input Text</h2>\r\n                    <textarea id=\"TextInput\" class=\"modal-input\">Copy/Paste Here</textarea>\r\n                    <hr>\r\n                    <button data-click=\"processTextInput\">Continue</button>\r\n                    `;\r\n\r\n    events.click.processTextInput = (e) => {\r\n\r\n        let text = document.getElementById(\"TextInput\").value;\r\n\r\n        closeModal();\r\n\r\n        callback.call(e.target, text);        \r\n    };\r\n\r\n    UI.modal(template);\r\n};\r\n\r\n\r\n\r\n// Mustache\r\n\r\n// let exampleFunc =  function () {\r\n//     return function (object, render) {\r\n//         var rendered = render(object);\r\n//          return rendered;          \r\n//     };\r\n// },","import { UI } from \"./helper_ui.js\";\r\n\r\nimport { mainTable } from \"./app.js\";\r\n\r\nexport const events = {\r\n    click: {},\r\n    change: {},\r\n    keyup: {},\r\n    actions: {}\r\n};\r\n\r\nevents.click.addToPage = () => {\r\n\r\n    if(!mainTable.isValid){\r\n        UI.warning(mainTable.validationError);\r\n        return false;\r\n    }\r\n\r\n    let data = { detail: mainTable.htmlOutput };\r\n\r\n    const insertEvent = new CustomEvent(\"gadget_insert\", data);\r\n\r\n    document.body.dispatchEvent(insertEvent);\r\n};\r\n\r\nevents.actions.importHtml = (html) => {\r\n\r\n    let success = mainTable.import(html);\r\n\r\n    if(!success){\r\n        UI.warning(\"Could Not Find Table in Imported HTML\");\r\n        return false;\r\n    }\r\n    mainTable.updateInterface();\r\n};\r\n\r\nevents.click.textInput = (source) => {\r\n\r\n    let action = source.dataset.action;\r\n\r\n    UI.textInput(function (text) {\r\n        events.actions[action]?.(text);\r\n    });\r\n};\r\n\r\nevents.click.resetTable = () => {\r\n\r\n    let message = \"Are you sure you want to reset the table? All data will be lost.\";\r\n    UI.confirm(message, () => {\r\n        mainTable.fullReset();\r\n    }, null);\r\n\r\n};\r\n\r\nevents.click.addColumn = (source) => {\r\n\r\n    if (mainTable.columns >= 10) {\r\n        UI.alert(\"Having more than 10 columns is not recommended.\");\r\n    }\r\n\r\n    let index = (source.dataset.column ?? null);\r\n\r\n    index = (index != null) ? parseInt(index) + 1 : null;\r\n\r\n    mainTable.addColumn(index);\r\n\r\n    mainTable.updateInterface([\"Header\", \"Body\"]);\r\n};\r\n\r\nevents.click.addRow = (source) => {\r\n    if (mainTable.rows >= 30) {\r\n        UI.alert(\"Tables this large can be difficult to read. Consider using multiple tables instead.\");\r\n    }\r\n\r\n    let index = (source.dataset.row ?? null);\r\n\r\n    index = (index != null) ? parseInt(index) + 1 : null;\r\n\r\n    mainTable.addRow(index);\r\n\r\n    mainTable.updateInterface([\"Body\"]);\r\n};\r\n\r\nevents.click.removeColumn = (source) => {\r\n    if (mainTable.columns === 1) {\r\n        return UI.warning(\"You must have at least 1 column.\");\r\n    }\r\n\r\n    mainTable.removeColumn(source.dataset.column);\r\n    mainTable.updateInterface([\"Header\", \"Body\"]);\r\n\r\n};\r\n\r\nevents.click.removeRow = (source) => {\r\n    if (mainTable.rows === 1) {\r\n        return UI.warning(\"You must have at least 1 row.\");\r\n    }\r\n    mainTable.removeRow(source.dataset.row);\r\n    mainTable.updateInterface([\"Body\"]);\r\n};\r\n\r\nevents.change.syncHeading = (source) => {\r\n\r\n    let location = source.dataset.location.split(\",\");\r\n    mainTable.updateTableHead(location[1], source.value);\r\n    mainTable.updateInterface([\"Header\"]);\r\n}\r\n\r\nevents.change.syncValue = (source) => {\r\n    let location = source.dataset.location.split(\",\");\r\n    mainTable.updateTableBody(location[0], location[1], source.value);\r\n    // No need to update interface, these are already IN the interface. \r\n}\r\n\r\nevents.keyup.syncCaption = (source) => {\r\n    mainTable.caption = source.value;\r\n    mainTable.updateInterface([\"Caption\"]);\r\n}\r\n\r\nevents.click.getHtmlCode = () => {\r\n    let output = `<textarea class='embed'>${mainTable.htmlOutput}</textarea>`;\r\n    UI.modal(output);\r\n};\r\n\r\nevents.click.previewTable = () => {\r\n    UI.modal(mainTable.htmlOutput);\r\n};\r\n\r\nevents.keyup.syncDefaultValue = (source) => {\r\n    mainTable.defaultNewValue = source.value;\r\n};","export class Benchmark {\r\n    constructor(name) {\r\n        this.name = name;\r\n        this.start = performance.now();\r\n        this.result = 0;\r\n    }\r\n\r\n    stop() {\r\n        this.result = performance.now() - this.start;\r\n        return this;\r\n    }\r\n\r\n    get detailedResults() {\r\n        return `Task \"${this.name}\" executed in ${this.result} ms.`;\r\n    }\r\n}","import { events } from './helper_events.js';\r\n\r\nimport { SimpleTable } from \"./class_SimpleTable.js\";\r\n\r\nexport const pageContext = {};\r\n\r\nexport const mainTable = new SimpleTable(\"MainTable\");\r\n\r\nwindow._mainTable = mainTable; // Just for debugging\r\n\r\ndocument.body.addEventListener(\"keyup\", (e) => {\r\n\r\n    let source = e.target;\r\n\r\n    events.keyup[source.dataset.keyup]?.(source, e);\r\n});\r\n\r\ndocument.body.addEventListener(\"change\", (e) => {\r\n\r\n    let source = e.target;\r\n\r\n    events.change[source.dataset.change]?.(source, e);\r\n});\r\n\r\ndocument.body.addEventListener(\"click\", (e) => {\r\n\r\n    let source = e.target;\r\n\r\n    events.click[source.dataset.click]?.(source, e);\r\n});\r\n\r\ndocument.body.onload = () => {\r\n\r\n    mainTable.updateInterface();\r\n};\r\n\r\nif (window.isGadget === true) {\r\n    import(\"./setup_gadget.js\").then((module) => {\r\n\r\n        const setupGadget = module.default;\r\n        \r\n        if (document.readyState != 'loading') {\r\n            setupGadget();\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', setupGadget);\r\n        }\r\n    });\r\n}\r\n\r\n\r\n\r\nwindow._debug = {\r\n    context: pageContext,\r\n    mainTable: mainTable,\r\n    events: events,\r\n    ou: true\r\n};","import mustache from './libs/mustache.js';\r\n\r\nimport { UI } from './helper_ui.js';\r\n\r\nimport { Benchmark } from \"./class_Benchmark.js\";\r\n\r\nexport class SimpleTable {\r\n    constructor(tableId) {\r\n        this.tableId = tableId;\r\n        this.caption = \"Table Caption\";\r\n        this.tableHeading = [\"Heading\"];\r\n        this.tableBody = [[\"Value\"]];\r\n        this.defaultNewValue = \"New Value\";\r\n        this.templates = {};\r\n    }\r\n\r\n    get isValid() {\r\n        if (this.caption.length <= 0) {\r\n            this.validationError = \"The caption cannot be blank.\";\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    get element() {\r\n        return document.getElementById(this.tableId);\r\n    }\r\n\r\n    get columns() {\r\n        return this.tableHeading.length;\r\n    }\r\n\r\n    get rows() {\r\n        return this.tableBody.length;\r\n    }\r\n\r\n    get tdTemplate() {\r\n        if (this.templates.td) return this.templates.td;\r\n        let query = `.td[data-template-for=\"${this.tableId}\"]`;\r\n        let template = document.querySelector(query)?.innerHTML;\r\n        this.templates.td = template;\r\n        return template;\r\n    }\r\n\r\n    get thTemplate() {\r\n        if (this.templates.th) return this.templates.th;\r\n        let query = `.th[data-template-for=\"${this.tableId}\"]`;\r\n        let template = document.querySelector(query)?.innerHTML;\r\n        this.templates.th = template;\r\n        return template;\r\n    }\r\n\r\n    get rowTemplate() {\r\n        if (this.templates.row) return this.templates.row;\r\n        let query = `.row[data-template-for=\"${this.tableId}\"]`;\r\n        let template = document.querySelector(query)?.innerHTML;\r\n        this.templates.row = template;\r\n        return template;\r\n    }\r\n\r\n    import(html) {\r\n        let workshop = document.createElement(\"div\");\r\n        document.body.appendChild(workshop);\r\n        workshop.style.visibility = \"hidden\";\r\n        workshop.innerHTML = html;\r\n\r\n        let check = workshop.querySelector(\"table\")?.children?.length ?? 0;\r\n        \r\n        if (check <= 0) return false;\r\n\r\n        let caption = workshop.querySelector(\"caption\")?.textContent ?? \"No Caption\";\r\n\r\n        let headRow = Array.from(workshop.querySelectorAll(\"th\")).map((item) => {\r\n            return item.textContent;\r\n        });\r\n\r\n        let colMax = 0;\r\n\r\n        let bodyRows = Array.from(workshop.querySelectorAll(\"tr\")).map((rowItem, rowIndex) => {\r\n\r\n            let rowData = Array.from(rowItem.querySelectorAll(\"td\"));\r\n\r\n            let newRow = rowData.map((td) => {\r\n                return td.textContent;\r\n            });\r\n\r\n            // Assure all rows have the same number of columns.\r\n            colMax = (colMax < newRow.length) ? newRow.length : colMax;\r\n\r\n            return newRow;\r\n        }).filter((row) => {\r\n            if (row.length > 0) return true;\r\n            return false;\r\n        });\r\n\r\n        {\r\n            // Synchronize the # of Columns between Header & Footer\r\n            colMax = (colMax < headRow.length) ? headRow.length : colMax;\r\n\r\n            bodyRows.forEach((row) => {\r\n                let diff = colMax - row.length;\r\n                let i = 0;\r\n                for (i; i < diff; i++) {\r\n                    row.push(this.defaultNewValue);\r\n                }\r\n            });\r\n\r\n            if (headRow.length < colMax) {\r\n                let diff = colMax - headRow.length;\r\n                let i = 0;\r\n                for (i; i < diff; i++) {\r\n                    headRow.push(\"Heading\");\r\n                }\r\n            }\r\n        }\r\n        {\r\n            // Cleanup DOM\r\n            workshop.parentElement.removeChild(workshop);\r\n        }\r\n        {\r\n            // Update actual data\r\n            this.caption = caption;\r\n            this.tableHeading = headRow;\r\n            this.tableBody = bodyRows;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    fullReset() {\r\n        this.caption = \"Table Caption\";\r\n        this.tableHeading = [\"Heading\"];\r\n        this.tableBody = [[\"Value\"]];\r\n        this.defaultNewValue = \"New Value\";\r\n        this.updateInterface();\r\n    }\r\n\r\n    addColumn(insertIndex) {\r\n\r\n        insertIndex = insertIndex ?? this.tableHeading.length;\r\n\r\n        this.tableHeading.splice(insertIndex, 0, \"New Heading\");\r\n\r\n        this.tableBody.forEach((item, index) => {\r\n            // item.push(this.defaultNewValue);\r\n            item.splice(insertIndex, 0, this.defaultNewValue)\r\n        });\r\n    }\r\n    addRow(insertIndex) {\r\n        insertIndex = insertIndex ?? this.tableBody.length;\r\n\r\n        let newRow = [];\r\n\r\n        this.tableHeading.forEach((item, idex) => {\r\n            newRow.push(this.defaultNewValue);\r\n        });\r\n\r\n        this.tableBody.splice(insertIndex, 0, newRow);\r\n    }\r\n\r\n    removeColumn(index) {\r\n        this.tableHeading.splice(index, 1);\r\n        this.tableBody.forEach((item, i) => {\r\n            item.splice(index, 1);\r\n        });\r\n    }\r\n\r\n    removeRow(index) {\r\n        this.tableBody.splice(index, 1);\r\n    }\r\n\r\n    get htmlOutput() {\r\n        let headerHtml = this.tableHeading.map(value => `\\n           <th>${value}</th>`).join(' ');\r\n        let bodyHtml = \"\";\r\n        this.tableBody.forEach((item) => {\r\n            bodyHtml += (\"\\n      <tr>\" + item.map(value => `\\n         <td>${value}</td>`).join(' ') + \"\\n     </tr>\");\r\n        });\r\n\r\n        let outHtml = ` \r\n<table>\r\n    <caption>${this.caption}</caption>\r\n    <thead>\r\n        <tr>${headerHtml}\r\n        </tr>\r\n    </thead>\r\n    <tbody>${bodyHtml}\r\n    </tbody>\r\n</table>`;\r\n\r\n        return outHtml;\r\n    }\r\n\r\n    _calcNumber(row, col) {\r\n\r\n        let max = this.columns * row;\r\n\r\n        return (col + max) +1;\r\n    }\r\n    /**\r\n     * WARNING: _functions are not \"public\" & may yeild unexpected results.  \r\n     */\r\n    _uiCaption() {\r\n        this.element.querySelector(\"caption\").textContent = this.caption;\r\n    }\r\n\r\n    /**\r\n     * WARNING: _functions are not \"public\" & may yeild unexpected results.  \r\n     */\r\n    _uiHeader() {\r\n        let num = this._calcNumber.bind(this);\r\n        let headerHtml = this.tableHeading.map((item, index) => {\r\n\r\n            let context = {\r\n                column: index,\r\n                number: num(0, index),\r\n                row: 0, value: item,\r\n                type: \"Heading\", first: index === 0\r\n            };\r\n\r\n            return mustache.render(this.thTemplate, context);\r\n\r\n        }).join(\"\");\r\n\r\n        this.element.querySelector(\"thead\").innerHTML = headerHtml;\r\n    }\r\n\r\n    /**\r\n     * WARNING: _functions are not \"public\" & may yeild unexpected results.  \r\n     */\r\n    _uiBody() {\r\n        let bodyHtml = \"\";\r\n        let columnCount = this.columns;\r\n        let num = this._calcNumber.bind(this);\r\n\r\n        this.tableBody.forEach((rowItem, rowIndex) => {\r\n\r\n\r\n            let context = {\r\n                rowContent: rowItem.map((item, index) => {\r\n                    let context = {\r\n                        column: index,\r\n                        row: rowIndex,\r\n                        number: num(rowIndex, index),\r\n                        value: item, type: \"Value\"\r\n                    };\r\n                    context.first = index == 0 ? true : false;\r\n                    return mustache.render(this.tdTemplate, context);\r\n                }).join(\"\"),\r\n                row: rowIndex,\r\n                nextRow: rowIndex + 1,\r\n                columns: columnCount\r\n            };\r\n\r\n\r\n\r\n            bodyHtml += mustache.render(this.rowTemplate, context);\r\n        });\r\n\r\n        this.element.querySelector(\"tbody\").innerHTML = bodyHtml;\r\n    }\r\n\r\n    updateInterface(type, location) {\r\n        let bench = new Benchmark(\"Update UI\");\r\n\r\n        type = type ?? [\"Caption\", \"Header\", \"Body\"];\r\n\r\n        let i = 0, len = type.length;\r\n\r\n        for (i; i < len; i++) {\r\n            let section = `_ui${type?.[i]}`;\r\n            let method = this?.[section];\r\n            method.bind(this).call();\r\n        }\r\n\r\n        console.log(bench.stop().detailedResults);\r\n        if (bench.result > 50) {\r\n            UI.alert(\"The performance of this application is lower than normal. This table may be too large.\");\r\n        }\r\n\r\n    }\r\n\r\n    updateTableHead(index, value) {\r\n        if (this.tableHeading?.[index]) {\r\n            this.tableHeading[index] = value;\r\n        }\r\n    }\r\n\r\n    updateTableBody(row, column, value) {\r\n        if (this.tableBody?.[row]?.[column]) {\r\n            this.tableBody[row][column] = value;\r\n        }\r\n    }\r\n\r\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _plugin() {\n  const data = require(\"@parcel/plugin\");\n\n  _plugin = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _utils() {\n  const data = require(\"@parcel/utils\");\n\n  _utils = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _nullthrows() {\n  const data = _interopRequireDefault(require(\"nullthrows\"));\n\n  _nullthrows = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// List of browsers that support dynamic import natively\n// https://caniuse.com/#feat=es6-module-dynamic-import\nconst DYNAMIC_IMPORT_BROWSERS = {\n  edge: '76',\n  firefox: '67',\n  chrome: '63',\n  safari: '11.1',\n  opera: '50'\n}; // Used for as=\"\" in preload/prefetch\n\nconst TYPE_TO_RESOURCE_PRIORITY = {\n  css: 'style',\n  js: 'script'\n};\nconst BROWSER_PRELOAD_LOADER = './loaders/browser/preload-loader';\nconst BROWSER_PREFETCH_LOADER = './loaders/browser/prefetch-loader';\nconst LOADERS = {\n  browser: {\n    css: './loaders/browser/css-loader',\n    html: './loaders/browser/html-loader',\n    js: './loaders/browser/js-loader',\n    wasm: './loaders/browser/wasm-loader',\n    IMPORT_POLYFILL: './loaders/browser/import-polyfill'\n  },\n  worker: {\n    js: './loaders/worker/js-loader',\n    wasm: './loaders/worker/wasm-loader',\n    IMPORT_POLYFILL: false\n  },\n  node: {\n    css: './loaders/node/css-loader',\n    html: './loaders/node/html-loader',\n    js: './loaders/node/js-loader',\n    wasm: './loaders/node/wasm-loader',\n    IMPORT_POLYFILL: null\n  }\n};\n\nfunction getLoaders(ctx) {\n  if (ctx.isWorker()) return LOADERS.worker;\n  if (ctx.isBrowser()) return LOADERS.browser;\n  if (ctx.isNode()) return LOADERS.node;\n  return null;\n} // This cache should be invalidated if new dependencies get added to the bundle without the bundle objects changing\n// This can happen when we reuse the BundleGraph between subsequent builds\n\n\nlet bundleDependencies = new WeakMap();\n\nvar _default = new (_plugin().Runtime)({\n  apply({\n    bundle,\n    bundleGraph,\n    options\n  }) {\n    // Dependency ids in code replaced with referenced bundle names\n    // Loader runtime added for bundle groups that don't have a native loader (e.g. HTML/CSS/Worker - isURL?),\n    // and which are not loaded by a parent bundle.\n    // Loaders also added for modules that were moved to a separate bundle because they are a different type\n    // (e.g. WASM, HTML). These should be preloaded prior to the bundle being executed. Replace the entry asset(s)\n    // with the preload module.\n    if (bundle.type !== 'js') {\n      return;\n    }\n\n    let {\n      asyncDependencies,\n      otherDependencies\n    } = getDependencies(bundle);\n    let assets = [];\n\n    for (let dependency of asyncDependencies) {\n      let resolved = bundleGraph.resolveAsyncDependency(dependency, bundle);\n\n      if (resolved == null) {\n        continue;\n      }\n\n      if (resolved.type === 'asset') {\n        if (!bundle.env.shouldScopeHoist) {\n          // If this bundle already has the asset this dependency references,\n          // return a simple runtime of `Promise.resolve(internalRequire(assetId))`.\n          // The linker handles this for scope-hoisting.\n          assets.push({\n            filePath: __filename,\n            code: `module.exports = Promise.resolve(module.bundle.root(${JSON.stringify(bundleGraph.getAssetPublicId(resolved.value))}))`,\n            dependency\n          });\n        }\n      } else {\n        let loaderRuntime = getLoaderRuntime({\n          bundle,\n          dependency,\n          bundleGraph,\n          bundleGroup: resolved.value,\n          options\n        });\n\n        if (loaderRuntime != null) {\n          assets.push(loaderRuntime);\n        }\n      }\n    }\n\n    for (let dependency of otherDependencies) {\n      // Resolve the dependency to a bundle. If inline, export the dependency id,\n      // which will be replaced with the contents of that bundle later.\n      let referencedBundle = bundleGraph.getReferencedBundle(dependency, bundle);\n\n      if (referencedBundle !== null && referencedBundle !== void 0 && referencedBundle.isInline) {\n        assets.push({\n          filePath: _path().default.join(__dirname, `/bundles/${referencedBundle.id}.js`),\n          code: `module.exports = ${JSON.stringify(dependency.id)};`,\n          dependency\n        });\n        continue;\n      } // Otherwise, try to resolve the dependency to an external bundle group\n      // and insert a URL to that bundle.\n\n\n      let resolved = bundleGraph.resolveAsyncDependency(dependency, bundle);\n\n      if (dependency.isURL && resolved == null) {\n        // If a URL dependency was not able to be resolved, add a runtime that\n        // exports the original moduleSpecifier.\n        assets.push({\n          filePath: __filename,\n          code: `module.exports = ${JSON.stringify(dependency.moduleSpecifier)}`,\n          dependency\n        });\n        continue;\n      }\n\n      if (resolved == null || resolved.type !== 'bundle_group') {\n        continue;\n      }\n\n      let bundleGroup = resolved.value;\n      let mainBundle = (0, _nullthrows().default)(bundleGraph.getBundlesInBundleGroup(bundleGroup).find(b => {\n        let entries = b.getEntryAssets();\n        return entries.some(e => bundleGroup.entryAssetId === e.id);\n      }));\n\n      if (bundle.env.outputFormat === 'commonjs' && mainBundle.type === 'js') {\n        assets.push({\n          filePath: __filename,\n          dependency,\n          code: `module.exports = require(\"./\" + ${getRelativePathExpr(bundle, mainBundle, options)})`\n        });\n        continue;\n      } // URL dependency or not, fall back to including a runtime that exports the url\n\n\n      assets.push(getURLRuntime(dependency, bundle, mainBundle, options));\n    } // In development, bundles can be created lazily. This means that the parent bundle may not\n    // know about all of the sibling bundles of a child when it is written for the first time.\n    // Therefore, we need to also ensure that the siblings are loaded when the child loads.\n\n\n    if (options.shouldBuildLazily && bundle.env.outputFormat === 'global') {\n      let referenced = bundleGraph.getReferencedBundles(bundle).filter(b => !b.isInline);\n\n      for (let referencedBundle of referenced) {\n        let loaders = getLoaders(bundle.env);\n\n        if (!loaders) {\n          continue;\n        }\n\n        let loader = loaders[referencedBundle.type];\n\n        if (!loader) {\n          continue;\n        }\n\n        let relativePathExpr = getRelativePathExpr(bundle, referencedBundle, options);\n        let loaderCode = `require(${JSON.stringify(loader)})(require('./bundle-url').getBundleURL() + ${relativePathExpr})`;\n        assets.push({\n          filePath: __filename,\n          code: loaderCode,\n          isEntry: true\n        });\n      }\n    }\n\n    if (shouldUseRuntimeManifest(bundle, options) && bundleGraph.getChildBundles(bundle).length > 0 && isNewContext(bundle, bundleGraph)) {\n      assets.push({\n        filePath: __filename,\n        code: getRegisterCode(bundle, bundleGraph),\n        isEntry: true\n      });\n    }\n\n    return assets;\n  }\n\n});\n\nexports.default = _default;\n\nfunction getDependencies(bundle) {\n  let cachedDependencies = bundleDependencies.get(bundle);\n\n  if (cachedDependencies) {\n    return cachedDependencies;\n  } else {\n    let asyncDependencies = [];\n    let otherDependencies = [];\n    bundle.traverse(node => {\n      if (node.type !== 'dependency') {\n        return;\n      }\n\n      let dependency = node.value;\n\n      if (dependency.isAsync && !dependency.isURL) {\n        asyncDependencies.push(dependency);\n      } else {\n        otherDependencies.push(dependency);\n      }\n    });\n    bundleDependencies.set(bundle, {\n      asyncDependencies,\n      otherDependencies\n    });\n    return {\n      asyncDependencies,\n      otherDependencies\n    };\n  }\n}\n\nfunction getLoaderRuntime({\n  bundle,\n  dependency,\n  bundleGroup,\n  bundleGraph,\n  options\n}) {\n  let loaders = getLoaders(bundle.env);\n\n  if (loaders == null) {\n    return;\n  }\n\n  let externalBundles = bundleGraph.getBundlesInBundleGroup(bundleGroup).filter(bundle => !bundle.isInline);\n  let mainBundle = (0, _nullthrows().default)(externalBundles.find(bundle => {\n    var _bundle$getMainEntry;\n\n    return ((_bundle$getMainEntry = bundle.getMainEntry()) === null || _bundle$getMainEntry === void 0 ? void 0 : _bundle$getMainEntry.id) === bundleGroup.entryAssetId;\n  })); // CommonJS is a synchronous module system, so there is no need to load bundles in parallel.\n  // Importing of the other bundles will be handled by the bundle group entry.\n  // Do the same thing in library mode for ES modules, as we are building for another bundler\n  // and the imports for sibling bundles will be in the target bundle.\n  // Also do this when building lazily or the runtime itself could get deduplicated and only\n  // exist in the parent. This causes errors if an old version of the parent without the runtime\n  // is already loaded.\n\n  if (bundle.env.outputFormat === 'commonjs' || bundle.env.isLibrary || options.shouldBuildLazily) {\n    externalBundles = [mainBundle];\n  } else {\n    // Otherwise, load the bundle group entry after the others.\n    externalBundles.splice(externalBundles.indexOf(mainBundle), 1);\n    externalBundles.reverse().push(mainBundle);\n  } // Determine if we need to add a dynamic import() polyfill, or if all target browsers support it natively.\n\n\n  let needsDynamicImportPolyfill = false;\n\n  if (bundle.env.isBrowser() && bundle.env.outputFormat === 'esmodule') {\n    needsDynamicImportPolyfill = !bundle.env.matchesEngines(DYNAMIC_IMPORT_BROWSERS);\n  }\n\n  let loaderModules = externalBundles.map(to => {\n    let loader = loaders[to.type];\n\n    if (!loader) {\n      return;\n    }\n\n    let relativePathExpr = getRelativePathExpr(bundle, to, options); // Use esmodule loader if possible\n\n    if (to.type === 'js' && to.env.outputFormat === 'esmodule') {\n      if (!needsDynamicImportPolyfill) {\n        return `import(\"./\" + ${relativePathExpr})`;\n      }\n\n      loader = (0, _nullthrows().default)(loaders.IMPORT_POLYFILL, `No import() polyfill available for context '${bundle.env.context}'`);\n    } else if (to.type === 'js' && to.env.outputFormat === 'commonjs') {\n      return `Promise.resolve(require(\"./\" + ${relativePathExpr}))`;\n    }\n\n    let code = `require(${JSON.stringify(loader)})(require('./bundle-url').getBundleURL() + ${relativePathExpr})`; // In development, clear the require cache when an error occurs so the\n    // user can try again (e.g. after fixing a build error).\n\n    if (options.mode === 'development' && bundle.env.outputFormat === 'global') {\n      code += '.catch(err => {delete module.bundle.cache[module.id]; throw err;})';\n    }\n\n    return code;\n  }).filter(Boolean);\n\n  if (bundle.env.context === 'browser' && !options.shouldBuildLazily) {\n    loaderModules.push(...externalBundles // TODO: Allow css to preload resources as well\n    .filter(to => to.type === 'js').flatMap(from => {\n      let {\n        preload,\n        prefetch\n      } = getHintedBundleGroups(bundleGraph, from);\n      return [...getHintLoaders(bundleGraph, bundle, preload, BROWSER_PRELOAD_LOADER, options), ...getHintLoaders(bundleGraph, bundle, prefetch, BROWSER_PREFETCH_LOADER, options)];\n    }));\n  }\n\n  if (loaderModules.length === 0) {\n    return;\n  }\n\n  let loaderCode = loaderModules.join(', ');\n\n  if (loaderModules.length > 1 && (bundle.env.outputFormat === 'global' || !externalBundles.every(b => b.type === 'js'))) {\n    loaderCode = `Promise.all([${loaderCode}])`;\n\n    if (bundle.env.outputFormat !== 'global') {\n      loaderCode += `.then(r => r[r.length - 1])`;\n    }\n  } else {\n    loaderCode = `(${loaderCode})`;\n  }\n\n  if (bundle.env.outputFormat === 'global' && mainBundle.type === 'js') {\n    loaderCode += `.then(() => module.bundle.root('${bundleGraph.getAssetPublicId(bundleGraph.getAssetById(bundleGroup.entryAssetId))}')${// In global output with scope hoisting, functions return exports are\n    // always returned. Otherwise, the exports are returned.\n    bundle.env.shouldScopeHoist ? '()' : ''})`;\n  }\n\n  return {\n    filePath: __filename,\n    code: `module.exports = ${loaderCode};`,\n    dependency\n  };\n}\n\nfunction getHintedBundleGroups(bundleGraph, bundle) {\n  let preload = [];\n  let prefetch = [];\n  let {\n    asyncDependencies\n  } = getDependencies(bundle);\n\n  for (let dependency of asyncDependencies) {\n    var _dependency$meta;\n\n    let attributes = (_dependency$meta = dependency.meta) === null || _dependency$meta === void 0 ? void 0 : _dependency$meta.importAttributes;\n\n    if (typeof attributes === 'object' && attributes != null && ( // $FlowFixMe\n    attributes.preload || attributes.prefetch)) {\n      let resolved = bundleGraph.resolveAsyncDependency(dependency, bundle);\n\n      if ((resolved === null || resolved === void 0 ? void 0 : resolved.type) === 'bundle_group') {\n        // === true for flow\n        if (attributes.preload === true) {\n          preload.push(resolved.value);\n        }\n\n        if (attributes.prefetch === true) {\n          prefetch.push(resolved.value);\n        }\n      }\n    }\n  }\n\n  return {\n    preload,\n    prefetch\n  };\n}\n\nfunction getHintLoaders(bundleGraph, from, bundleGroups, loader, options) {\n  let hintLoaders = [];\n\n  for (let bundleGroupToPreload of bundleGroups) {\n    let bundlesToPreload = bundleGraph.getBundlesInBundleGroup(bundleGroupToPreload);\n\n    for (let bundleToPreload of bundlesToPreload) {\n      let relativePathExpr = getRelativePathExpr(from, bundleToPreload, options);\n      let priority = TYPE_TO_RESOURCE_PRIORITY[bundleToPreload.type];\n      hintLoaders.push(`require(${JSON.stringify(loader)})(require('./bundle-url').getBundleURL() + ${relativePathExpr}, ${priority ? JSON.stringify(priority) : 'null'}, ${JSON.stringify(bundleToPreload.target.env.outputFormat === 'esmodule')})`);\n    }\n  }\n\n  return hintLoaders;\n}\n\nfunction isNewContext(bundle, bundleGraph) {\n  let parents = bundleGraph.getParentBundles(bundle);\n  return bundle.isEntry || parents.length === 0 || parents.some(parent => parent.env.context !== bundle.env.context || parent.type !== 'js');\n}\n\nfunction getURLRuntime(dependency, from, to, options) {\n  let relativePathExpr = getRelativePathExpr(from, to, options);\n\n  if (dependency.meta.webworker === true) {\n    return {\n      filePath: __filename,\n      code: `module.exports = require('./get-worker-url')(${relativePathExpr});`,\n      dependency\n    };\n  }\n\n  return {\n    filePath: __filename,\n    code: `module.exports = require('./bundle-url').getBundleURL() + ${relativePathExpr}`,\n    dependency\n  };\n}\n\nfunction getRegisterCode(entryBundle, bundleGraph) {\n  let idToName = {};\n  bundleGraph.traverseBundles((bundle, _, actions) => {\n    if (bundle.isInline) {\n      return;\n    }\n\n    idToName[bundle.publicId] = (0, _nullthrows().default)(bundle.name);\n\n    if (bundle !== entryBundle && isNewContext(bundle, bundleGraph)) {\n      // New contexts have their own manifests, so there's no need to continue.\n      actions.skipChildren();\n    }\n  }, entryBundle);\n  return \"require('./bundle-manifest').register(JSON.parse(\" + JSON.stringify(JSON.stringify(idToName)) + '));';\n}\n\nfunction getRelativePathExpr(from, to, options) {\n  if (shouldUseRuntimeManifest(from, options)) {\n    return `require('./relative-path')(${JSON.stringify(from.publicId)}, ${JSON.stringify(to.publicId)})`;\n  }\n\n  return JSON.stringify((0, _utils().relativeBundlePath)(from, to, {\n    leadingDotSlash: false\n  }));\n}\n\nfunction shouldUseRuntimeManifest(bundle, options) {\n  let env = bundle.env;\n  return !env.isLibrary && env.outputFormat === 'global' && env.isBrowser() && options.mode === 'production';\n}"],"names":["$60a35f8b4ca9c08f3724af23028e44fb$var$cachedBundles","$60a35f8b4ca9c08f3724af23028e44fb$var$cachedPreloads","$60a35f8b4ca9c08f3724af23028e44fb$var$cachedPrefetches","$parcel$global","globalThis","self","window","global","$60a35f8b4ca9c08f3724af23028e44fb$var$getCache","type","loader","bundle","cache","apply","arguments","catch","e","$b9649f09b3e461f9d1d57afd7f00d053$var$cacheLoader","Promise","resolve","reject","globalName","Math","random","slice","m","cleanup","script","onerror","remove","document","createElement","async","charset","textContent","head","appendChild","$15f23511d9e1b59c548a6c85d4be4b16$var$bundleURL","$15f23511d9e1b59c548a6c85d4be4b16$var$getBundleURLCached","Error","err","matches","stack","match","replace","$15f23511d9e1b59c548a6c85d4be4b16$var$getBundleURL","getBundleURL","$7b0b40924f81206212a1117814e540fc$var$objectToString","Object","prototype","toString","$7b0b40924f81206212a1117814e540fc$var$isArray","Array","isArray","object","call","$7b0b40924f81206212a1117814e540fc$var$isFunction","$7b0b40924f81206212a1117814e540fc$var$escapeRegExp","string","$7b0b40924f81206212a1117814e540fc$var$hasProperty","obj","propName","$7b0b40924f81206212a1117814e540fc$var$regExpTest","RegExp","test","$7b0b40924f81206212a1117814e540fc$var$nonSpaceRe","$7b0b40924f81206212a1117814e540fc$var$isWhitespace","re","$7b0b40924f81206212a1117814e540fc$var$testRegExp","$7b0b40924f81206212a1117814e540fc$var$entityMap","&","<",">","\"","'","/","`","=","$7b0b40924f81206212a1117814e540fc$var$whiteRe","$7b0b40924f81206212a1117814e540fc$var$spaceRe","$7b0b40924f81206212a1117814e540fc$var$equalsRe","$7b0b40924f81206212a1117814e540fc$var$curlyRe","$7b0b40924f81206212a1117814e540fc$var$tagRe","$7b0b40924f81206212a1117814e540fc$var$Scanner","this","tail","pos","$7b0b40924f81206212a1117814e540fc$var$Context","view","parentContext",".","parent","$7b0b40924f81206212a1117814e540fc$var$Writer","templateCache","_cache","set","key","value","get","clear","eos","scan","index","substring","length","scanUntil","search","push","lookup","name","primitive","hasOwnProperty","intermediateValue","names","context","lookupHit","indexOf","split","clearCache","parse","template","tags","cacheKey","$7b0b40924f81206212a1117814e540fc$export$default","join","isCacheEnabled","tokens","undefined","openingTagRe","closingTagRe","closingCurlyRe","lineHasNonSpace","sections","spaces","hasTag","nonSpace","indentation","tagIndex","stripSpace","pop","compileTags","tagsToCompile","start","chr","token","openSection","scanner","i","valueLength","charAt","nestedTokens","collector","numTokens","$7b0b40924f81206212a1117814e540fc$var$nestTokens","lastToken","squashedTokens","$7b0b40924f81206212a1117814e540fc$var$squashTokens","$7b0b40924f81206212a1117814e540fc$var$parseTemplate","render","partials","config","getConfigTags","renderTokens","originalTemplate","symbol","buffer","renderSection","renderInverted","renderPartial","unescapedValue","escapedValue","rawValue","j","indentPartial","partial","filteredIndentation","partialByNl","indentedValue","escape","getConfigEscape","String","version","Scanner","Context","Writer","$7b0b40924f81206212a1117814e540fc$var$defaultWriter","TypeError","s","$091dd10a0ceba2fe9ee4e41b8a1e11f0$export$UI","innerHTML","source","selector","id","html","querySelector","rendered","target","data","add","$091dd10a0ceba2fe9ee4e41b8a1e11f0$var$closeModal","getElementById","_document$getElementB","modal","content","click","closeModal","wrapper","dataset","body","alert","message","warning","confirm","ifYes","ifNo","confirmYes","confirmNo","textInput","callback","processTextInput","text","$bd74da6b178ad2641259c408b53b24da$export$events","change","keyup","actions","addToPage","isValid","validationError","detail","htmlOutput","insertEvent","CustomEvent","dispatchEvent","importHtml","success","import","updateInterface","action","resetTable","fullReset","addColumn","columns","column","parseInt","addRow","rows","row","removeColumn","removeRow","syncHeading","location","updateTableHead","syncValue","updateTableBody","syncCaption","caption","getHtmlCode","output","mainTable","previewTable","syncDefaultValue","defaultNewValue","$c666400a1255e6ed6e0987946f997a33$export$Benchmark","constructor","performance","now","result","stop","pageContext","tableId","tableHeading","tableBody","templates","td","query","th","workshop","style","visibility","check","_workshop$querySelect","children","_workshop$querySelect2","_workshop$querySelect3","headRow","from","querySelectorAll","map","item","colMax","bodyRows","rowItem","rowIndex","newRow","filter","forEach","diff","parentElement","removeChild","insertIndex","splice","idex","headerHtml","bodyHtml","outHtml","_calcNumber","col","_uiCaption","element","_uiHeader","num","bind","number","first","thTemplate","_uiBody","columnCount","rowContent","tdTemplate","nextRow","rowTemplate","bench","len","section","_type","console","log","detailedResults","_mainTable","addEventListener","onload","isGadget","then","module","setupGadget","default","readyState","_debug","events","ou"],"version":3,"file":"index.33e82fd0.js.map"}