const t={set:{},get:{}};t.get={innerHTML:t=>t.innerHTML,textContent:t=>t.textContent,value:t=>t.value,template:t=>{let e=`template[data-for='${t.id||t.name}']`;return document.querySelector(e).innerHTML}},t.set={innerHTML:(t,e)=>(t.innerHTML=e,`target HTML is now ${e}`),textContent:(t,e)=>(t.textContent=e,`target text is now ${e}`),value:(t,e)=>(t.value=e,`target value is now ${e}`)},t.add={innerHTML:(t,e)=>{t.innerHTML=t.innerHTML+e},textContent:(t,e)=>{t.textContent=t.textContent+e},value:(t,e)=>{t.value=t.value+e}};const e={};class n{constructor(t,n){let a=n.split(" of ").join(",").split(" with ").join(",").split(" ").join(",").split(",");this.method=a[0],this.targetData=a[1],this.targetSelector=a[2],this.sourceData=a[3],this.source=t,this.history=[],e[this.source.id||this.source.name]=this}replace=()=>{let e=document.querySelector(this.targetSelector),n=t.get[this.sourceData]?.(this.source),a=t.set[this.targetData]?.(e,n);this.history.push(a)};insert=()=>{let e=document.querySelector(this.targetSelector),n=t.get[this.sourceData]?.(this.source),a=t.add[this.targetData]?.(e,n);this.history.push(a)};update=()=>{this[this.method]?.()}}const a={click:{},change:{}};function i(t,a){let i=t.dataset[a];if(!i)return!1;(e[t.id||t.name]??new n(t,i)).update()}document.body.addEventListener("keyup",(t=>{i(t.target,"keyup")})),document.body.addEventListener("change",(t=>{let e=t.target;a.change[e.dataset.change]?.(e,t),i(e,"change")})),document.body.addEventListener("click",(t=>{let e=t.target;a.click[e.dataset.click]?.(e,t),i(e,"click")}));
//# sourceMappingURL=index.js.map
