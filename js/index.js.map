{"mappings":"MAAaA,EAAAA,CAAOC,IAAAA,GAASC,IAAAA,IAE7BF,EAAGE,IAAAA,CACCC,UAAYC,GACDA,EAAOD,UAElBE,YAAcD,GACHA,EAAOC,YAElBC,MAAQF,GACGA,EAAOE,MAElBC,SAAWH,QACHI,EAAAA,sBAAiCJ,EAAOK,IAAML,EAAOM,gBAE9CC,SAASC,cAAcJ,GAAUL,YAMpDH,EAAGC,IAAAA,CACCE,UAAW,CAACU,EAAQC,KAChBD,EAAOV,UAAYW,wBACUA,KAEjCT,YAAa,CAACQ,EAAQC,KAClBD,EAAOR,YAAcS,wBACQA,KAEjCR,MAAO,CAACO,EAAQC,KACZD,EAAOP,MAAQQ,yBACeA,MAItCd,EAAGe,IAAAA,CACCZ,UAAW,CAACU,EAAQC,KAChBD,EAAOV,UAAYU,EAAOV,UAAYW,GAE1CT,YAAa,CAACQ,EAAQC,KAClBD,EAAOR,YAAcQ,EAAOR,YAAcS,GAE9CR,MAAO,CAACO,EAAQC,KACZD,EAAOP,MAAQO,EAAOP,MAAQQ,UC1CzBE,EAAAA,GAEN,MAAAC,EACHC,YAAYC,EAAeC,OAEnBC,EAASD,EAAcE,MAAM,QAAQC,KAAK,KAAKD,MAAM,UAAUC,KAAK,KAAKD,MAAM,KAAKC,KAAK,KAAKD,MAAM,KAExGE,KAAKC,OAASJ,EAAO,GACrBG,KAAKE,WAAaL,EAAO,GACzBG,KAAKG,eAAiBN,EAAO,GAC7BG,KAAKI,WAAaP,EAAO,GACzBG,KAAKpB,OAASe,EACdK,KAAKK,QAAAA,GAELb,EAAYQ,KAAKpB,OAAOK,IAAMe,KAAKpB,OAAOM,MAAQc,KAItDM,QAAU,SAEFjB,EAASF,SAASC,cAAcY,KAAKG,gBAErCb,EAAAA,EAAUZ,IAAIsB,KAAKI,cAAcJ,KAAKpB,QAEtC2B,EAAAA,EAAY9B,IAAIuB,KAAKE,cAAcb,EAAQC,GAE/CU,KAAKK,QAAQG,KAAKD,IAGtBE,OAAS,SAEDpB,EAASF,SAASC,cAAcY,KAAKG,gBAErCb,EAAAA,EAAUZ,IAAIsB,KAAKI,cAAcJ,KAAKpB,QAEtC2B,EAAAA,EAAYhB,IAAIS,KAAKE,cAAcb,EAAQC,GAE/CU,KAAKK,QAAQG,KAAKD,IAGtBG,OAAS,KACLV,KAAKA,KAAKC,mBC3CLU,EAAAA,CACTC,MAAAA,GACAC,OAAAA,ICGJ,SAAAC,EAAwBlC,EAAQmC,OAExBnB,EAAgBhB,EAAOoC,QAAQD,OAE9BnB,EAAAA,OAAsB,GAEvBqB,EAA4BrC,EAAOK,IAAML,EAAOM,OAAAA,IAAAA,EAAqBN,EAAQgB,IAEnEc,SAGlBvB,SAAS+B,KAAKC,iBAAiB,SAAUC,IAIrCN,EAFaM,EAAE/B,OAEQ,YAG3BF,SAAS+B,KAAKC,iBAAiB,UAAWC,QAElCxC,EAASwC,EAAE/B,SAERwB,OAAOjC,EAAOoC,QAAQH,UAAUjC,EAAOwC,GAE9CN,EAAelC,EAAQ,aAG3BO,SAAS+B,KAAKC,iBAAiB,SAAUC,QAEjCxC,EAASwC,EAAE/B,SAERuB,MAAMhC,EAAOoC,QAAQJ,SAAShC,EAAQwC,GAE7CN,EAAelC,EAAQ","sources":["./scripts/helper_ui.js","./scripts/helper_bindings.js","./scripts/helper_events.js","./scripts/app.js"],"sourcesContent":["export const UI = { set: {}, get: {} };\r\n\r\nUI.get = {\r\n    innerHTML: (source) => {\r\n        return source.innerHTML;\r\n    },\r\n    textContent: (source) => {\r\n        return source.textContent;\r\n    },\r\n    value: (source) => {\r\n        return source.value;\r\n    },\r\n    template: (source) => {\r\n        let selector = `template[data-for='${source.id || source.name}']`;\r\n\r\n        let html = document.querySelector(selector).innerHTML;\r\n\r\n        return html;\r\n    }\r\n}\r\n\r\nUI.set = {\r\n    innerHTML: (target, data) => {\r\n        target.innerHTML = data;\r\n        return `target HTML is now ${data}`;\r\n    },\r\n    textContent: (target, data) => {\r\n        target.textContent = data;\r\n        return `target text is now ${data}`;\r\n    },\r\n    value: (target, data) => {\r\n        target.value = data;\r\n        return `target value is now ${data}`;\r\n    }\r\n}\r\n\r\nUI.add = {\r\n    innerHTML: (target, data) => {\r\n        target.innerHTML = target.innerHTML + data;\r\n    },\r\n    textContent: (target, data) => {\r\n        target.textContent = target.textContent + data;\r\n    },\r\n    value: (target, data) => {\r\n        target.value = target.value + data;\r\n    }\r\n}\r\n","import {UI} from './helper_ui.js';\r\n\r\nexport const appBindings = {};\r\n\r\nexport class binding {\r\n    constructor(sourceElement, bindingString) {\r\n\r\n        let values = bindingString.split(\" of \").join(\",\").split(\" with \").join(\",\").split(\" \").join(\",\").split(\",\");\r\n\r\n        this.method = values[0];\r\n        this.targetData = values[1];\r\n        this.targetSelector = values[2];\r\n        this.sourceData = values[3];\r\n        this.source = sourceElement;\r\n        this.history = [];\r\n\r\n        appBindings[this.source.id || this.source.name] = this;\r\n\r\n    }\r\n\r\n    replace = () => {\r\n\r\n        let target = document.querySelector(this.targetSelector);\r\n\r\n        let data = UI.get[this.sourceData]?.(this.source);\r\n\r\n        let result = UI.set[this.targetData]?.(target, data);\r\n\r\n        this.history.push(result);\r\n    };\r\n\r\n    insert = () => {\r\n\r\n        let target = document.querySelector(this.targetSelector);\r\n\r\n        let data = UI.get[this.sourceData]?.(this.source);\r\n\r\n        let result = UI.add[this.targetData]?.(target, data);\r\n\r\n        this.history.push(result);\r\n    }\r\n\r\n    update = () => {\r\n        this[this.method]?.();\r\n    }\r\n\r\n}","export const events = {\r\n    click: {},\r\n    change: {}\r\n};","\r\nimport {appBindings, binding} from './helper_bindings.js';\r\n\r\nimport {events} from './helper_events.js';\r\n\r\nfunction executeBinding(source, type) {\r\n\r\n    let bindingString = source.dataset[type];\r\n\r\n    if (!bindingString) return false;\r\n\r\n    let targetBinding = appBindings[source.id || source.name] ?? new binding(source, bindingString);\r\n\r\n    targetBinding.update();\r\n}\r\n\r\ndocument.body.addEventListener(\"keyup\", (e) => {\r\n\r\n    let source = e.target;\r\n\r\n    executeBinding(source, \"keyup\");\r\n});\r\n\r\ndocument.body.addEventListener(\"change\", (e) => {\r\n\r\n    let source = e.target;\r\n\r\n    events.change[source.dataset.change]?.(source,e);\r\n\r\n    executeBinding(source, \"change\");\r\n});\r\n\r\ndocument.body.addEventListener(\"click\", (e) => {\r\n\r\n    let source = e.target;\r\n\r\n    events.click[source.dataset.click]?.(source, e);\r\n\r\n    executeBinding(source, \"click\");\r\n});\r\n"],"names":["$632e4ccab43011bec62e9d47fc1f8b4b$export$UI","set","get","innerHTML","source","textContent","value","template","selector","id","name","document","querySelector","target","data","add","$c24ef134cc90cf14bb494cde166e7b6c$export$appBindings","$c24ef134cc90cf14bb494cde166e7b6c$export$binding","constructor","sourceElement","bindingString","values","split","join","this","method","targetData","targetSelector","sourceData","history","replace","result","push","insert","update","$f7f143154cd9b09dbe2af8b1c2d3d7ea$export$events","click","change","$ceede7009f4e20f5387374ba7ec43680$var$executeBinding","type","dataset","targetBinding","body","addEventListener","e"],"version":3,"file":"index.js.map"}